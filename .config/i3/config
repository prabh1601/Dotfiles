# Variables 
set $mod mod4
set $term kitty

#*************************************************************************************************************************
#                                                    CONFIG - KEYBINDINGS
#*************************************************************************************************************************

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym F10 restart

# reload the configuration file
bindsym $mod+Shift+c reload

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec --no-startup-id $HOME/.config/rofi/powermenu/logout.sh

#*****************
#                                                    AESTHETICS
#*************************************************************************************************************************

###################
#      FONTS      #
###################

#font pango:monospace 8
font pango:DejaVu Sans Mono 8

#######################
#       BORDERS       #
#######################

# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 2

client.focused #C3B1E1 #C3B1E1 #C3B1E1 #FF6961 #a8dadc


#*************************************************************************************************************************
#                                                    AUTOSTART APPLICATIONS           
#*************************************************************************************************************************

####################
#      "exec"      #
####################

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3 

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the 
# screen before suspend. Use loginctl lock-session to lock your screen
exec --no-startup-id xset s 600 60 && xss-lock --transfer-sleep-lock -n .scripts/dim-screen.sh -- ~/.scripts/lock.sh -n

# Starting Network Manager
exec --no-startup-id nm-applet

# Starting Compositor
exec --no-startup-id picom --experimental-backends -f -b

# Start Notification Server 
exec --no-startup-id dunst 

# Setting up yellow light filter
exec --no-startup-id redshift -P -O 4000 

# Starting polkit agent
exec --no-startup-id lxsession
#########################
#      exec_always      #
#########################

# Setting up Wallpaper
exec_always --no-startup-id nitrogen --restore

# Starting Polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start autotiling package
exec_always --no-startup-id autotiling

# Start mpd-mpris
#exec_always --no-startup-id mpd-mpris


#*************************************************************************************************************************
#                                                    WORKSPACES           
#*************************************************************************************************************************


# Define names for default workspaces for which we configure key bindings later on.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


#move focused container to workspace and switch to workspace
bindsym $mod+Control+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Control+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Control+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Control+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Control+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Control+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Control+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Control+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Control+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Control+0 move container to workspace number $ws10; workspace number $ws10

#optimization options 
workspace_auto_back_and_forth yes
bindsym $mod+u [urgent=latest] focus
for_window [class=.*] focus 
focus_on_window_activation focus


#assigning specific workspace to apps
assign [class="discord"] $ws9
assign [class="Slack"] $ws9
assign [class="whatsapp-nativefier"] $ws9
assign [title="Spotify â€“ Web Player"] $ws9
assign [class="Virt-manager"] $ws10

#*************************************************************************************************************************
#                                                    MEDIA-KEYBINDS           
#*************************************************************************************************************************


# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


#*************************************************************************************************************************
#                                                    MOVEMENTS-KEYBINDS           
#*************************************************************************************************************************

#change workspace 
bindsym --whole-window button8 exec --no-startup-id "~/.scripts/go_back.sh"
bindsym --whole-window button9 exec --no-startup-id "~/.scripts/go_front.sh"

# minify the screen 
bindsym $mod+y fullscreen disable, floating enable, resize set 400 300, sticky enable, move window to position 1515 20

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#Popups during fullscreen mode 
#popup_during_fullscreen smart

# kill focused window
bindsym $mod+q kill

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


#*************************************************************************************************************************
#                                                    APPLICATION CONFIGS AND KEYBINDINGS           
#*************************************************************************************************************************

# start a terminal
bindsym $mod+Return exec --no-startup-id $term

# start rofi 
bindsym --release Alt_L exec --no-startup-id /home/prabh/.config/rofi/launcher/launcher.sh

# start dmenu
bindsym $mod+d exec --no-startup-id "dmenu_run -b"

# start chrome 
bindsym $mod+g exec --no-startup-id "google-chrome-stable"

# start flameshot (piece of screen)
bindsym Control+Delete exec --no-startup-id "flameshot gui"
# Start flameshot (full screen)
bindsym Print exec --no-startup-id "flameshot screen"

# Lauching applications in floating mode
for_window [class="Nitrogen"] floating enable
for_window [class="feh"] floating enable
for_window [class="Gucharmap"] floating enable
for_window [class="flameshot"] floating enable
for_window [class="jetbrains-*"] floating enable
for_window [class="gnome-calendar"] floating enable
for_window [class="googlecalendar-nativefier-e22938"] floating enable
for_window [class="kalendar"] floating enable
for_window [class="Cheese"] floating enable
for_window [class="huiontablet"] floating enable
#*************************************************************************************************************************
#                                                    GAPS           
#*************************************************************************************************************************

gaps inner 4
#smart_borders on
#smart_gaps on

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0


        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

#************************************************************************************************************************
#                                                    RESIZE-MODE           
#*************************************************************************************************************************

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

